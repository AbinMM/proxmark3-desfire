# This new makefile replaces the previous Makefile/Makefile.linux
# with as much common code for both environments as possible.
# Following is a short OS detection to set up variables, all the
# remaining Makefile should be portable and only depend on these
# variables

# Windows' echo echos its input verbatim, on Posix there is some
#  amount of shell command line parsing going on. echo "" on 
#  Windows yields literal "", on Linux yields an empty line
ifeq ($(shell echo ""),)
# This is properly a proper system, so we can use uname
UNAME := $(shell uname)
ifeq ($(UNAME), Linux)
# Linux. (Todo: Add MacOS X if appropriate)
DELETE=rm -rf
PATHSEP=/
DETECTED_OS=Linux
# You may/should set this in your environment
ARMLIB ?= /usr/local/lib/gcc/arm-elf/4.3.3/interwork
endif
else
# Assume that we are running on Windows.
DELETE=del /q
PATHSEP=\\#
ARMLIB ?= ../../devkitARM/lib/gcc/arm-elf/4.1.0/interwork
DETECTED_OS=Windows
endif

CC	= arm-elf-gcc
AS	= arm-elf-as
LD	= arm-elf-ld
OBJCOPY = arm-elf-objcopy

OBJDIR	= obj

INCLUDE = -I../include

# Also search prerequisites in the common directory (for usb.c)
VPATH = . ../common/

INCLUDES = ../include/proxmark3.h ../include/at91sam7s128.h ../include/config_gpio.h ../include/usb_cmd.h $(APP_INCLUDES)

CFLAGS =  -c $(INCLUDE) -Wall $(APP_CFLAGS)
